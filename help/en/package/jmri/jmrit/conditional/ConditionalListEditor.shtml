<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
"http://www.w3.org/TR/html4/strict.dtd">

<html lang="en">
<head>
  <meta name="generator" content=
  "HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.17), see www.w3.org">

  <title>JMRI: Conditional List Editor</title>
  <meta http-equiv="Content-Type" content=
  "text/html; charset=us-ascii">
  <meta content="Bob Jacobsen" name="Author">
  <meta name="keywords" content=
  "JMRI help Logix Conditional Add Edit">
  <!--#include virtual="/Style" -->
</head>

<body>
  <!--#include virtual="/Header" -->

  <div class="nomenu" id="mBody">
    <div id="mainContent">
      <h1>Conditional List Editor</h1>

      <p>The Edit Conditional pane is where logical expressions
      are set up and where actions are specified. The Edit
      Conditional pane is displayed when a Conditional is
      created, or when the <strong>Edit</strong> button of a Conditional is
      pressed in the <a href="LogixAddEdit.shtml">Edit Logix
      pane</a>. The Edit Conditional pane at the top displays the
      system name and user name of the Conditional. The system
      name is automatically set by the program and cannot be
      changed. The user name may be edited by entering/modifying
      the text in the User Name field. The user name may not be the
      same as the user name of another Conditional in this Logix,
      but may be the same as the user name of a Conditional in a
      different Logix.</p>

      <p>Next are two sections--one for the setup of a logical
      expression and one for set up of actions. Conditionals are
      statements of the form:</p>

      <div style="margin-left: 2em;"><p><code>if (logical expression) then (action)</code></p></div>
      
      <p>A Conditional has two distinct parts: its "logical
      expression" and its "action". The pane has separate
      sections for the set up of each.</p>

      <h2>Logical Expression</h2>
      <p>The logical expression section contains a table of state
      variables, with two buttons below. The first column in the
      state variable table displays the row number of the state
      variable. This is only of importance when the <strong>Logic
      Operator</strong> choice is set to 'Mixed'. The second column
      contains an automatic AND when the <strong>Logic Operator</strong>
      choice is set to 'AND' or an automatic OR when the choice is
      'OR'. When the choice is 'Mixed' the user may select AND or
      OR as needed. The third column contains a choice box that
      allows the user to select the NOT operator as needed. The
      fourth column is a description of the state variable type and
      the condition for which it is to be tested. Next is a column
      displaying the current state for the test description. The
      state displayed includes the effect of the NOT operator, if
      NOT is selected.</p>

      <p>The Triggers Calculation column contains checkboxes that
      normally are checked, so that a change in the state variable
      will trigger a calculation of the Logix. For those cases
      where a change in a specific entity (sensor, turnout, etc.)
      should not trigger a calculation result, you should uncheck
      the checkbox by clicking on it. Unchecking the checkbox tells
      the program to monitor that entity for state changes and
      calculate the state of the Conditional, but take no action on
      the result of the calculation.</p>

      <p>The last two columns of the table (<strong>Edit</strong> and
      <strong>Delete</strong> buttons) are used to edit or delete that row in
      the state variable table. Delete a state variable if you
      decide it is no longer needed. The State column of the table
      shows the state (true or false) of each state variable when
      it is evaluated.</p>

      <p>At any time during the entry of state variable data,
      <strong>Check State Variables</strong> may be clicked to check entered
      data and evaluate state variables. When this button is
      pressed, checking and evaluation proceeds until the check
      completes successfully, or an error is detected. If an error
      is detected, checking stops for you to correct the error and
      click <strong>Check State Variables</strong> again. <em>Please remember
      after editing name and data items to click a different cell
      in the table before clicking <strong>Check State Variables</strong> (or
      <strong>Update Conditional</strong> at the bottom of the window) so
      that the program is notified that you have finished your
      entry. Otherwise your entry may not take effect, and an error
      may be reported unnecessarily.</em></p>

      <p>The default <strong>Logic Operator</strong> is "AND". In this case
      the Conditional will test if all variable tests are true,
      after taking the "NOT" negations into account. Using the
      <strong>Logic Operator</strong> box below the list of variables, you
      can change that to "OR" or "Mixed". "OR" means the
      conditional will be true if any one of the variable tests are
      true, after accounting for the negations. Selecting "Mixed"
      will let you enter a logical expression in a new text box
      using AND's, 'OR's and NOT's and the row numbers. In this
      expression, each variable is referred to by number, e.g. R1,
      R2, R3 for the 1st three variables, you can use the operators
      "and", "or" and "not" in addition to parentheses. Some
      examples:</p>
      
      <div style="margin-left: 2em;"><p><code>
      R1 and R2<br>
      R1 or (R2 and R3)<br>
      (R2 and R3) or (R3 and R1)
      </code></p></div>

      <h3>Adding a New State Variable</h3>

      <p>Press the <strong>Add State Variable</strong> to add a state
      variable (a row in the state variable table). This brings up
      a pane with a choice box for the user to select a state
      variable type. Available state variables are documented
      <a href="#variable">below</a>. When a type is chosen, the
      Edit Variable pane displays a text field for the name of
      the entity to be used for the state variable. When a name
      (either system name or user name) is entered, it must
      correspond to an existing entity (sensor, turnout, light,
      etc.). It is useful to open the Sensor Table when entering
      sensor names, or the Turnout Table to show available
      turnouts, etc. The actual format for entering names
      will depend on the conditional name selection method setting.
      See <a href="LogixTable.shtml#selectMethod">
      Conditional Name Selection Method</a>.</p>
      
      <p>For Conditional Variables, the text input field is replaced
      by two drop down combo boxes.  The first box is used to
      select the Logix, the second box is used to select a
      Conditional that belongs to the selected Logix.
      <span class="since">since 4.7.4</span>
      <a href="images/SelectConditionalReference.png">
      <img src="images/SelectConditionalReference.png"
      alt="Logix/Conditional Combo Boxes" height="148" width="558">
      </a>
      </p>
      
      <p>After the name is entered, select the required state from the
      <strong>Variable State</strong> drop down box.  Depending on the selected
      variable type and state, additional fields may be displayed.

      <p>At any time during the entry of state variable data, the
      <strong>Check State Variables</strong> button may be clicked to check
      the entered data and evaluate the state variables. When this
      button is pressed, the checking and evaluation proceeds until
      the check completes successfully, or an error is detected. If
      an error is detected, the checking stops for the user to
      correct the error and click <strong>Check State Variables</strong>
      again. <em>Please remember after editing the system name and
      data items to click a different cell in the table before
      clicking <strong>Check State Variables</strong> (or <strong>Update
      Conditional</strong> at the bottom of the pane) so that the
      program is notified that you have finished your entry.
      Otherwise your entry may not take effect, and an error may be
      reported unnecessarily.</em></p>

      <h2>Action</h2>
      <p>The action section contains a table of actions, with two
      buttons below.  The action list shows a description of each
      action.  The <strong>Edit</strong> button is used to change an action.
      The <strong>Delete</strong> button is used to delete an action.

      <p>Actions are evaluated in the order listed. To change that
      order, click the "Reorder" button on the "Edit Conditional"
      window. The right-most buttons by the actions will then let
      you select the first one, next one, etc.</p>

      <h3>Adding a New Action</h3>

      <p>To add a new action, press the "Add Action" button. A new
      "Edit Action" pane will appear. Select an action type in
      the type box. The data items needed to completely specify the
      action will appear to the right of the type box. If you don't
      know what needs to be entered in a data field, hover your
      cursor over it, and a hint message will appear. When a name
      must be entered, the name must correspond to the system name
      or the user name of an existing entity (sensor, turnout,
      signal head, etc.) of the proper type. Opening the Sensor
      Table when entering sensor names, or the Turnout Table to see
      available turnouts, etc., may be useful. Available action
      types are described in detail <a href=
      "#action">below</a>. The actual method for entering names
      will depend on the conditional name selection method setting.
      See <a href="LogixTable.shtml#selectMethod">
      Conditional Name Selection Method</a></p>

      <p>For each action, three options are available for when to
      trigger the action:</p>
      <ul>
        <li>On Change to True</li>
        <li>On Change to False</li>
        <li>On Change</li>
      </ul>
      <p>These refer to the calculated state
      of the Conditional, which is equal to the value of the
      logical expression as specified in the state variable table.
      One of these options must be selected. When done, click
      either "Update" to install your changes, "Cancel" to close
      the window without any changes or "Delete" to remove the
      action entirely.</p>

      <p>When the logical expression and actions have been
      specified, click <strong>Update Conditional</strong> at the bottom of
      the window. This initiates a check of the logical expression
      (the same as done by <strong>Check State Variables</strong>) and a
      check of entered data for actions. If the user name has been
      edited, it is also checked. If an error is found, a message
      box opens announcing the error, and the update is stopped to
      allow you to correct the error and click <strong>Update
      Conditional</strong> again. If no error is found, the action is
      updated with the entered data, the Edit Conditional window is
      closed, and the user is returned to the Edit Logix
      window.</p>

      <p>Two other buttons are available at the bottom of the Edit
      Conditional window. Clicking <strong>Cancel</strong> will close the
      Edit Conditional window without updating the Conditional.
      Clicking <strong>Cancel</strong> results in loss of any data that has
      been entered. The other button, <strong>Delete Conditional</strong>,
      provides an easy way to delete an unneeded Conditional. Click
      <strong>Delete Conditional</strong> to delete the Conditional being
      edited and return to the Edit Logix window.</p>

      <p>Available state variables and actions are listed below. For
      more information, consult the <a href=
      "../../../../html/tools/Logix.shtml">main Logix
      documentation</a>.</p>

      <!--#include virtual="/Footer" -->
    </div><!-- closes #mainContent-->
  </div><!-- closes #mBody-->
</body>
</html>
