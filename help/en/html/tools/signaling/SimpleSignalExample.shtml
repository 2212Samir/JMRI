<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="en">
<head>
<!-- Copyright Bob Jacobsen 2008 -->
<title>JMRI: Simple Signal Logic Example</title>

<!-- Style -->
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" type="text/css" href="/css/default.css" media="screen">
<link rel="stylesheet" type="text/css" href="/css/print.css" media="print">
<link rel="icon" href="/images/jmri.ico" TYPE="image/png">
<link rel="home" title="Home" href="/">
<!-- /Style -->
</head>

<body>
<!--#include virtual="/Header" -->

<!--#include virtual="Sidebar" -->
<div id="mainContent">

<!-- Page Body -->
<h2>
JMRI: Simple Signal Logic Example
</h2>

This page provides an example of using the JMRI "Simple Signal Logic"
to control signals connected to a Digitrax SE8c.  This also works for 
other types of signals, including LEDs connected to stationary decoders, C/MRI
systems, etc.
<p>
Modeling railroad signaling on a layout can be done many different ways,
ranging from "stoplights" to complete emulation of a particular prototype's
signaling rule book. For more information on the various possibilities,
please see the
<a href="index.shtml">JMRI Signaling help page</a>.

<h2>Predefined example</H2>

A predefined example signaling configuration is provided in the JMRI downloads; see the
<a href="http://jmri.sourceforge.net/download">download page</a> for information on downloading).
To use it:
<ul>
<li>Start the PanelPro program, and select "Preferences..." from the Edit (or PanelPro on OS X) menu.
On the pane that opens, select "LocoNet Simulator" as the protocol.
Save, and quit the program.  This will let you use the example (which
uses LocoNet addresses for Signals, Turnouts and Sensors) even when 
your computer is not connected to a layout of any kind.
<li>Restart the PanelPro program.
<li>From the "Panels" menu, select "Open Panels..." and navigate to 
the file "SE8cSignalExample.xml" in the xml/layout directory.
Note that you may have to look around for this file; it's in the
same place that you installed the program.<a href="images/StartPanel.png"><img src="images/StartPanel.png" align="right" width="317" height="173" hspace="0" vspace="2" alt="Demo screen at startup"></a></li>
<li>
You should now see a simple schematic Panel for a layout consisting of a loop
of track and one passing siding (as shown to the right, click to enlarge).
<p>
Because there's no connection to a real layout, the status of the Sensors and
Turnouts isn't initially known.  This example shows that by displaying the
Sensor icons as Red, and the Turnout icons as "not connected either way".
Since the Simple Signal Logic isn't sure whether Blocks are occupied nor how Turnouts
are set, it shows Red on all the Signal Heads.
<p>
You can click on the icons to change the occupancy and
turnout status, or use another tool (e.g. the Turnouts Table) to do that.
<p>Click on each of the Turnout icons to set them "Closed". Click on the 
Sensor icons to set them "Unoccupied", which is shown as a 
Grey; "Occupied" is indicated by Yellow).</li>
<li>
<a href="images/SensorsCleared.png"><img src="images/SensorsCleared.png" align="right" width="317" height="173" hspace="0" vspace="2" alt="Demo screen in clear state"></a>
The display should now look like the image to the right. 
The signals on the passing siding are red, as the Turnouts are thrown against
them.  All the Signals on the mainline show a Green Appearance.
<p>
If you "hover" the cursor over an item, a tooltip will pop up with information
about the item. For example, a Turnout might show "Turnout 1 (LT1)".
LT1 is the "System Name" for that Turnout. In this case, it
means "LocoNet Turnout with address 1".  "Turnout 1" is a "User Name", 
which can be anything you want it to be as long as it is unique on your Panel.  You can edit these with the
"Turnouts Table" in the Tools menu. Signal Heads and Sensors
work similarly.  There's more information on this on the
<a href="../../doc/Technical/Names.shtml">JMRI help page on naming</a>.</li>
<li>
You can now click on the Sensors to show how the Signals would react
to the presence of a train.  For example, the image to the right
shows a train entering a passing siding from the left side. It's about
to encounter a Yellow signal upon entering the siding, which tells it to 
be prepared to stop for a Red signal at the far end of the 
siding.<br><a href="images/SensorTuroutsSet.png"><img src="images/SensorTuroutsSet.png" align=right width="317" height="173" hspace="0" vspace="2" alt="Demo screen with two trains"></a>
Note that the rear of this train is protected by a Red signal, which in
turn is protected by a Yellow signal in the previous Block.
Another train is just leaving 
onto the main going to the right.  

<li>
If you're interested in how the program communicates with a
Digitrax SE8c signaling card, you can open the "Monitor LocoNet"
tool from the LocoNet menu. Clicking on a Turnout sends a
LocoNet message to move the turnout. Clicking on a Sensor
sends a message as if a BDL16 sensor channel had seen
a change in occupancy.  If either of those messages result in
a change to the Signals, the program will send 
messages to those SE8c channels to change their output to match.
For example, when the train in the previous image enters the
block on the right side (block 1), the messages are:
<pre>
   General sensor input report: contact 1 (DS54 0 ch1 Sw  input) (BDL16 0 A2) is Hi 
   Requesting Switch at 290 to Thrown (output Off)
   Requesting Switch at 284 to Thrown (output Off)
   Requesting Switch at 281 to Thrown (output Off)
</pre>
The three switch messages set signals 5B, 4D and 4C to Red, Red and Yellow respectively.
<li>
<a href="../../../images/SE8cExampleLogic.png"><img src="../../../images/SE8cExampleLogic.png" align="right" width="290" height="270" hspace="0" vspace="0" alt="Simple Signal Logic Window"></a>
To see how the Signals are configured, open the 
"Simple Signal Logic" item in the Tools menu.
Enter a Signal name, e.g. "Section 5A" in the top
text field and hit "Return".  You should get something
like the image to the right (click to enlarge).  
"Section 5A" is the name of the Signal protecting
Turnout 2, the right-hand entrance to the passing siding.
<ul>
<li>It's defined here as an "On Facing-Point Turnout" signal. 
<li>It protects Sensor LS7 by turning Red when the Sensor
detects a train in the Block.
<li>It watches the status of Turnout LT2. When that Turnout is "Thrown",
the signal will be Yellow when signal LH263 at the entrance to the
passing siding is Red.  When the Turnout is "Closed", a Yellow signal
will protect a Red on signal LH261 on the mainline between the turnouts.
<li>
The "With Flashing Yellow" checkbox isn't selected here, but if it was, this signal
would protect a Yellow signal further on by displaying a Flashing Yellow.
<li>
If you check the "Distant Signal" box, the 
signal you're controlling here is programmed to show the same or a more restrictive Aspect 
as the next signal, instead of possibly one faster. Instead of showing Yellow before a Red, it 
will show a Red.
</ul>
You can change any of these setting and click "Apply" to put them into
effect, then click on the example Panel to see how the new settings work.
</ul>

<a name="setup"/>
<h2>Setting up your own example</h2>
The complete set of steps involved in creating this example were:
<ol>
<li>Launch and configure the PanelPro application. Restart it to 
have your preferences take effect.
<p>
For more information on launching and configuring 
PanelPro, please see the
<a href="../../apps/PanelPro/PanelPro.shtml">PanelPro help page</a>.

<li>Tell the program about your Sensors: 
  <ul>
  <li>From the Tools menu, open the "Tables" > "Sensors" tool.
  <li>If you have a Digitrax DCC system with your
      occupancy detectors connected to LocoNet, just
      power the track Off and On using either a DT-series
      throttle or the "Power Control..." pane from the Tools menu.
      PanelPro will capture all sensor addresses from 
      the resulting LocoNet traffic.
   <li>For layouts with a different System Connection, use the "Add..." button at the bottom of the Sensors Table to create the needed sensors.  
   </ul>

<li>Save your work by selecting "Save Panels..." from the "Panels" menu,
typing a filename, and hitting "Save Panels". (You might want to do this often!)

<li>Tell the program about your computer-driven Turnouts:
  <ul>
  <li>From the Tools menu, open the "Tables" > "Turnouts" tool.
  <li>If you have a Digitrax DCC system, just
      throw or close each Turnout from a throttle.
      PanelPro will capture the Turnout addresses from 
      the resulting LocoNet traffic.
   <li>You can also use the "Add..." button on the Turnouts Table to open a 
      pane to enter new Turnouts.
   <li>The "Turnout Control..." pane in the Tools menu also creates a new
      turnout entry for every turnout you operate.
   </ul>

<li>If you have Signal Heads connected to "turnout-type" outputs,
tell the program about those Turnout addresses too. (SE8c users skip this step)

<a name="definesignals"/>
<li>Tell it how your signals are addressed.
<a href="../../../images/SigTable.gif"><img src="../../../images/SigTable.gif" align="right" width="314" height="140" hspace="0" vspace="0" alt="Signal Head Table Figure"></a>

  <ul>
  <li>From the Tools menu, open the "Tables" > "Signals" > "Signal Heads" tool.
  <li>Click the 
      "<a href="../../../package/jmri/jmrit/beantable/SignalAddEdit.shtml">Add...</a>"
      button to pop a pane. At the top are several choices for your type of signal driver:
      <dl>
      <dt>Triple Output
      <dd>This a Signal Head connection type with red/yellow/green lights that
      are driven by three separate outputs.  
      The outputs are driven by JMRI turnout logic, and 
      appear in the Turnouts Table.
      <br>To configure one of these,
      enter the name you want to give it (typically something like IH2, etc.), and
      the names of the three outputs that drive the lamps.
      <dt>Double Output
      <dd>This a Signal Head connection type with lights that
      are driven by two output connections. 
      The two outputs drive red and green lights separately; PanelPro
      will turn them both On to make yellow.
      The outputs are driven by JMRI turnout logic, and 
      appear in the Turnouts Table.
      <br>
      To configure one of these,
      enter the name you want to give it (typically something like IH2, etc), and
      the names of the two turnouts that drive the lamps.
      <dt>SE8c 4 Aspect
      <dd>This type is for Signal Heads driven by a Digitrax SE8c decoder.  
      <br>
      Enter the lower of the two "turnout addresses" that this Signal Head
      responds to.  For example, if it's the first head on the first
      card, you can control it by setting Turnouts 257 and 258 with
      your throttle.  Enter 257 in the turnout control box.
      <br>
      The SE8c should be configured so that the "4th aspect" is "dark";
      the program will handle any flashing that's needed.
      <dt>Other signal driver options are "DCC Signal Decoder" and "Acela", among many others (you may have to scroll up or down to see them all)
      <dd>See the <a href="SignalHeads.shtml">Signal Heads help page</a> for more information an each.
      </dl>
      Once you've set the options, click "OK".  You can 
      use this pane repeatedly to enter as many Signal Heads as you have.
  </ul>

<li>Configure your Simple Signal Logic:
	<ul>
	<li>Open the "Simple Signal Logic" tool from the "Tools" menu.  You should get a pane
	with a number of fields:
	<a href="../../../images/SE8cExampleLogic.png"><img src="../../../images/SE8cExampleLogic.png" align=right width="290" height="270" hspace="2" vspace="0" alt="Simple Signal Logic Window"></a>
	<li>In the top box, enter the name of the Signal you want to control.
	<li>The radio buttons below that select one of four possible uses
	for this Signal:
		<ul>
		<li>"On Single Block" - this Signal protects one end of a straight
		through block, with no signaled turnouts
		<li>"Main Leg of (trailing-point) Turnout" - this Signal is along
		 the main route through a turnout, which is defined as the direction
		 taken by trains when the turnout is "Closed".  It's protecting the
		 frog of the turnout so that trains will stop before running 
		 through a turnout set against them.
		<li>"Diverging Leg of (trailing-point) Turnout" - this Signal is along
		 the diverging route through a turnout, which is defined as the direction
		 taken by trains when the turnout is set to "Thrown".  It's protecting the
		 frog of the turnout so that trains will stop before running 
		 through a turnout set against them.
		<li>"On Facing-Point Turnout" - this Signal is protecting the 
		points-end of a turnout. Depending on whether the Turnout is
		Thrown or Closed, the train will take two different routes, and the
		Signal will protect different next Blocks.
		</ul>
	<li>If you want the Signal to go Red when a Sensor shows
	Occupied (sensor active), enter the Sensor Name in the next box.
	<li>If this Signal is protecting travel in the trailing point
	direction through a turnout, you can have the Signal show Red if
	the Turnout is thrown against the train. To do this, enter the
	Turnout Name to be monitored in the 3rd box, and select whether
	the signal should be Red when the turnout is either Thrown or Closed.
	<li>If you want multi-block logic, e.g. Absolute Block Signaling,
	enter the name of the following Signal in the last box.  When that
	Signal shows Red, the one you're now configuring will be set to Yellow to warn the engineer
	that the train must be able to stop at the next signal.<br>
	<i>We suggest you use the newer <a href="AspectSignaling.shtml">Aspect Based Signaling</a> instead of SSL for any more complex setup .</i><br>
	If you'd like to give additional warning, click the "With Flashing
	Yellow" checkbox.  In that case, the Signal before a Red will show
	 Yellow, and the Signal before that yellow will
	show a Flashing Yellow.
    <li>Once you've set the options, click "OK".  You can 
      use this form repeatedly to enter as many as you'd like, ach with their own unique name of course.
	</ul>
<li>Once you save your work, you're done!
</ol>

You can try out your Simple Signal Logic by operating your layout.
<p>
Although it's a lot less fun than actually running the layout, 
you can also test the Simple Signal Logic by changing Turnout
and Sensor status on the computer itself.  Just click on the status
information in one of the Tables to change it. For example, if Turnout
LT23 is showing "Thrown", click on that to change it to "Closed".  The
signal status will update to the new Appearance.
<p>
You can create a small Control Panel to do this graphically. For more
info on how to do that, see the 
<a href="../../apps/PanelPro/Panels.shtml">Panels help page</a>.
<p>
Located at en\html\tools\signaling\

<!--#include virtual="/Footer" -->
</body>
</html>
