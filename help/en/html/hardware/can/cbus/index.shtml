<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">

<html lang="en">
<head>
  <meta name="generator" content=
  "HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.17), see www.w3.org">
  <meta name="keywords" content="JMRI help MERG CBUS">
  <title>JMRI Hardware Support - MERG CBUS</title><!-- Style -->
  <meta http-equiv="Content-Type" content=
  "text/html; charset=us-ascii">
  <link rel="stylesheet" type="text/css" href="/css/default.css"
  media="screen">
  <link rel="stylesheet" type="text/css" href="/css/print.css"
  media="print">
  <link rel="icon" href="/images/jmri.ico" type="image/png">
  <link rel="home" title="Home" href="/"><!-- /Style -->
</head>

<body>
  <!--#include virtual="/Header" -->

  <div class="nomenu" id="mBody">
    <div id="mainContent">
      <h1>Hardware Support: MERG CBUS</h1>

      <ul class="snav">
        <!-- TOC -->


        <li><a href="#documentation">Documentation</a></li>        
        
        <li><a href="#connecting">Connecting</a></li>

        <li><a href="#tools">JMRI MERG CBUS Tools</a></li>
        
        <li>3rd Party Links</li>

      </ul>

            <a name="documentation" id="documentation"></a>
      <h2>Documentation</h2>
      
      <p>As support for MERG CBUS continues to evolve, 
      this is not a definitive CBUS network guide.
      Although a stable platform, the JMRI documentation  
      might be ahead or behind the actual code.
      </p>
      
      <h3>
      
      
      </h3>
      
      
      
      
      <a name="tools" id="tools"></a>
      
      
      
      <h2>JMRI MERG CBUS Tools</h2>
      
      <img src=
      "../images/MERG_Menu.png" alt="MERG menu" align="right"
      height="134" width="188">

      <p>The MERG menu contains 5 tools:</p>

      <ul>
        <li><a href=
        "../../../../package/jmri/jmrix/can/cbus/swing/console/CbusConsoleFrame.shtml">
        Console</a></li>


        
        <li><a href=
        "../../../../package/jmri/jmrix/can/swing/send/CanSendFrame.shtml">
        Send Frame</a></li>

        <li><a href=
        "../../../../package/jmri/jmrix/can/cbus/swing/configtool/ConfigToolFrame.shtml">
        Event Capture Tool</a></li>

        <li><a href="../../../../package/jmri/jmrix/can/cbus/swing/eventtable/EventTablePane.shtml">
        Event Table</a></li>

        <li><a href=
        "../../../../package/jmri/jmrix/can/cbus/swing/nodeconfig/NodeConfigToolPane.shtml">
        Node Config Tool</a></li>
      </ul>      
      
      <p>Other CBUS JMRI help</p>
      <ul>
        <li><a href="Names.shtml">Naming of CBUS inputs and outputs</a> - Adding CBUS events to JMRI sensor / turnout tables.</li>
        <li><a href="Details.shtml">Technical details of CBUS Support</a> - MERG connection options in the main JMRI preferences.</li>
        <li><a href="../index.shtml">Main CAN Support Help page</a></li>
      </ul>
      
      
      


      <h3>JMRI Help</h3>

      
      
      
      
      
      <a name="connecting" id="connecting"><h2>Connecting</h2></a>
      
      
      <h3>Typical first-time Connection Steps</h3>
      <ul>
      <li>Many Modern Operating Systems do not require device drivers to be installed when connecting a CANUSB4.
      <br>
      Plug in, and after being recognised they just work :-) </li>
      <li>Install JMRI</li>
      <li>Connection Preferences - Select MERG connection, set options as appropriate, use "CAN via MERG CAN-RS or CAN-USB" for a CANUSB4, generally no need to diverge from defaults.</li>
      <li>Save / Restart JMRI</li>
      <li>If you are using DCC over the MERG connection, check that JMRI Preferences > Defaults are set correctly, though leave consisting set to internal.
      <br>
      You can use an existing DCC command station, or have a separate DCC command station for a programming track by setting these options.</li>
      <li>A new menu item MERG appears in the PanelPro or DecoderPro window, containing the MERG tools.
      <br>
      Open the tools up and have a play.</li>
      <li>Test CBUS events can be sent from the MERG Send CAN Frame tool.  
      <br>
      Set the test event, eg Frame packets "" and / or "", then waiting 1,000 msec and click Start Sending.
      <br>
      Check that these events are actually being sent over the CBUS network by using a CBUS module such as a CANACT.</li>
      <li>Use an external producer module to test connectivity receiving events, confirming they appear in the MERG console
      </li>
      </ul>

      
      <h3>CBUS Events</h3>
      

      <p>JMRI provides support for general JMRI
      <a href="../../../tools/Sensors.shtml">Sensors</a>, <a href=
      "../../../tools/Turnouts.shtml">Turnouts</a> and <a href=
      "../../../tools/Lights.shtml">Lights</a> in terms of CBUS
      "events".</p>

      <p>An overview of CBUS Event and object names are described
      below, see full Naming details on <a href=
      "Names.shtml">this page</a>.</p>
      

              <h3>Sensors, Turnouts and Lights</h3>
        
        
        <p>The 1st letter of a sensor, turnout or light system name is the <a href="../../../doc/Technical/Names.shtml">system
      letter</a>, generally "M" for MERG connections.
      </p>
        
        
              <p>JMRI associates CBUS events with individual JMRI objects
      (Sensors, Turnouts, Lights, etc.) via the JMRI System Names.
      </p>
        
        
        <p>The system name ( M ), and event type ( S, T or L ) are added automatically when creating a new table entry.</p>

        
              <p>
      Depending on which CBUS event IDs are used on a
      particular layout, these system names can get very long, in
       which case the "user names" become much more useful.</p>
        
        
        <h4>Sensors</h4>
      
      <p>
      A System Name like "<code>MS+123;-345</code>" defines a
      Sensor that follows the "123 ON" and "345 OFF" CBUS events to
      change state. 
      </p>
        
        
        
        <h4>Turnouts</h4>
    <p>  
      JMRI is emitting the CBUS frames instead of
      receiving them, and the type letter is "T" instead of "S",
      e.g. <code>MT-18;+21</code>)
      </p>



      
      
      <h4>Lights</h4>
            <p>The scheme is similar to Turnouts
      above, except the type letter is "L" instead of "T", e.g.
      <code>ML-18;+21</code>)</p>
      


      <h3>Adding an item to a table</h3>
      <p>When you add an item to one of the tables, many times you only
      have to fill in the numbers to have JMRI construct
      the complete system name.</p>

      
      <p>Here's a few examples :</p>

      
      
      
      <table border="1">
        <tbody>
        <tr>
          
          <th>Entry</th>
          <th>Meaning</th>
          <th>Table Added to</th>
          <th>Makes System Name</th>
          <th>Example Username</th>
        </tr>
        <tr>
          
          <td>18</td>
          <td>event 18 On; 18 Off</td>
          <td>Turnout</td>
          <td>MT18</td>
        </tr>
        <tr>

          <td>18;21</td>
          <td>event 18 On; 21 On</td>
          <td>Sensor</td>
          <td>MS18;21</td>
        </tr>
        <tr>
          <td>+18;-21</td>
          <td>event 18 On; 21 Off</td>
          <td>Turnout</td>
          <td>MT+18;-21</td>
        </tr>
        <tr>
          <td>+N2E18;-N2E18</td>
          <td>Node 2 Event 18; On Event = Active; Off Event = Inactive</td>
          <td>Sensor</td>
          <td>MS+N2E18;-N2E18</td>
        </tr>
        </tbody></table>
        
        <p>See <a href="Names.shtml">Naming of CBUS inputs and outputs</a> for Masks, Hex and full details.</p> 
        
      <!-- this table is an exceprt from the table in the help/en/html/doc/Technical/Names.shtml
      based on information from the Hardware help pages
      by Egbert Broerse @silverailscolo July 2017 -->
        
        
        
        
        
        <!--
        A big chunk of text discussing naming options + naming table moved to /help/en/html/hardware/can/cbus/Names.shtml
        @icklesteve June 2018
        -->
        


      <h4>Automatic Creation of Sensors</h4>

      <p>JMRI automatically attempts to create Sensor objects from
      the traffic that it hears on the CBUS.</p>
      <p>When JMRI hears an ON
      or OFF event on the CBUS, it creates a Sensor using the
      corresponding event ID.</p>
      <p>This automatically-created sensor
      defaults to the ON event setting the Sensor ACTIVE and the
      OFF event setting INACTIVE.</p>

      <p>Because events are not intrinsically associated with
      specific hardware objects, and because people can use event
      IDs in many ways, this doesn't do what's desired.</p>
      <p>When it
      doesn't, you can manually create the proper Sensors using the
      <a href=
      "../../../../package/jmri/jmrit/beantable/SensorAddEdit.shtml">
      Add...</a> button on the <a href=
      "../../../../package/jmri/jmrit/beantable/SensorTable.shtml">Sensor
      Table</a>.</p>

      <p>Note that there's a <a href=
      "../../../../package/jmri/jmrix/can/cbus/swing/configtool/ConfigToolFrame.shtml">
      CBUS Event Capture Tool</a> that can help you create Turnouts
      and Sensor names without having to directly work out the
      System Names.</p>

      
      
      
      <h3>Signalling</h3>
      
      <p>There are multiple ways to interface JMRI signalling with CBUS modules, this is just one approach.</p>
      
      
      <h4>JMRI Controlled Signal Logic</h4>
      
      <p></p>
      
      
      
      <h4>Receiving Module supplied or existing Signal Logic into JMRI</h4>
      
      <p> Get CBUS event as sensor, use LOGIX to set the signal head or mast as appropriate </p>
      
      
      <h3>Connecting a MERG DCC Command Station CANCMD</h3>
      
      <p>Make sure that main JMRI Preferences > Defaults are set to your MERG connection though set Internal for consists.
      </p>
      <p>Events do not need to be set up to connect a MERG DCC Command Station CANCMD.</p>
<p>      
      JMRI will automatically send the DCC events over the CBUS network and can be monitored within FCU ( todo - check if shown in CBUS tools).</p>
      
<p>DCC is not a requirement for CBUS or JMRI, many DC layouts use CBUS + JMRI for signalling purposes.
<br>
Adding CBUS / JMRI to an existing DC layout is a good advisory route and may lesson the learning curve of getting used to DCC at the same time!
</p>

      <h3>Third Party / Support</h3>
      <ul>
        <li><a href="https://www.merg.org.uk/merg_resources/cbus-dcc.php">https://www.merg.org.uk/merg_resources/cbus-dcc.php</a> 
        The Model Electronic Railway Group MERG-DCC help page.
        </li>
        
        
        <li><a href="https://www.merg.org.uk/kits.php#sect35">https://www.merg.org.uk/kits.php</a>
        MERG CBUS kits. Classic CBUS refers to a 15v AC kit power supply ( most are very easily adaptable for 12v DC ), CBUS 2G are all 12v DC kits.
        Classic and 2G modules can both be on the same network with an element of care, consult the MERG forum.
        </li>
        
        <li><a href="https://github.com/MERG-DEV">https://github.com/MERG-DEV</a>
        Merg CBUS Development on Github - Much of it is licensed under the GNU General Public License v3.0.
        </li>
        
        <li><a href="https://github.com/phillipsnj/mergCbusServer">https://github.com/phillipsnj/mergCbusServer</a> 
        Merg Cbus Server - enables multiple network connections to a MERG CANUSB4.
        </li>
        
        <li><a href="https://github.com/amaurial/mergCanBus">https://github.com/amaurial/mergCanBus</a>
        MergCBUS implementation for Arduino.
        </li>
        
        
        
        <li><a href="http://www.oscale.net/?q=en/cbus">http://www.oscale.net/?q=en/cbus</a>
        CBUS on an Arduino using CAN BUS shields - See download links at bottom ( in English + German )
        </li>
        


        <li><a href="https://www.npmjs.com/search?q=keywords:MERG">https://www.npmjs.com/search?q=keywords:MERG</a>
        nodejs modules to create a MERG cbus module + Class to create a Cbus module conneted via ethernet.
        </li>


        <li><a href="http://www.rickdavis.co.uk/rail/control-cbus.php">http://www.rickdavis.co.uk/rail/control-cbus.php</a>
        Middle Earth Model Railway has over 70 CBUS modules installed on it and uses JMRI.
        </li>
        
      </ul>

      <!--#include virtual="/Footer" -->
    </div><!-- closes #mainContent-->
  </div><!-- closes #mBody-->
</body>
</html>
