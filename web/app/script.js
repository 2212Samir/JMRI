/*
 * Template for the web app script generated by JMRI.
 * 
 * This template will be completed with dependences (item 1), routes (2),
 * navigation menu items (3), and additional providers (4)
 */

// create the jmri.app module
angular.module('jmri.app', [
  // dependencies %1$s
]);

// configure the jmri.app module
angular.module('jmri.app').config(['$routeProvider', '$logProvider',
  function ($routeProvider, $logProvider) {
    'use strict';

    $routeProvider
    // routes %2$s
    // Default
    .otherwise({redirectTo: '/'});
    
    $logProvider.debugEnabled = false;
  }
]);

// add the navigation menu controller to the jmri.app module
angular.module('jmri.app').controller('NavigationCtrl', ['$scope', '$http', '$jsonSocket', '$log', '$interval',
  function ($scope, $http, $jsonSocket, $log, $interval) {
    // navigation items %3$s

    // about display
    $http.get('/app/about').then(function (response) {
      $scope.additionalInfo = response.data.additionalInfo;
      $scope.copyright = response.data.copyright;
      $scope.imgAlt = response.data.imgAlt;
      $scope.imgSrc = response.data.imgSrc;
      $scope.title = response.data.title;
      $scope.productInfo = response.data.productInfo;
    });
    $scope.openAboutModal = function () {
      $scope.isAboutModalOpen = true;
    };
    $scope.onAboutModalClose = function() {
      $scope.isAboutModalOpen = false;
    };
    
    // core socket services (power and keep alive)
    $scope.heartbeat;
    $scope.startHeartbeat = function(heartbeat) {
      if (angular.isDefined($scope.heartbeat)) {
        return;
      }
      $log.info("Starting heartbeat every " + heartbeat + " ms.");
      $scope.heartbeat = $interval(function() {
        $jsonSocket.ping();
      }, heartbeat);
    };
    $scope.stopHeartbeat = function() {
      if (angular.isDefined(heartbeat)) {
        $interval.cancel(heartbeat);
        heartbeat = undefined;
      }
    };
    $scope.power = [];
    $scope.setPower = function(name, state) {
      $jsonSocket.setPower(name, (state === $jsonSocket.POWER_ON) ? $jsonSocket.POWER_OFF : $jsonSocket.POWER_ON);
    };
    $jsonSocket.register({
      open: function() {
        $jsonSocket.list('power');
      },
      power: function(data, method) {
        $log.debug('got power ' + data.name + " (" + data.state + ")");
        if (!$jsonSocket.mergePush($scope.power, data)) {
          $jsonSocket.getPower(data.name);
        }
      },
      hello: function(data, method) {
        $scope.startHeartbeat(data.heartbeat);
      },
      pong: function(data, method) {
        $log.debug("Received pong");
      },
      close: function() {
        $scope.stopHeartbeat();
      }
      
    });
    
    // set the browser locale
    // TODO: read cookie with locale if one exists
    // TODO: move this into the factory
    if (!$jsonSocket.socket.readyState) {
      var locale = (navigator.languages && navigator.languages.length) ? navigator.languages[0] : navigator.language;
      $jsonSocket.get('locale', {locale: locale});
    }
    $jsonSocket.list('power');

  }
]);

angular.module('jmri.app').filter('triStateCheckBox', function($jsonSocket) {
  return function(input) {
    switch(input) {
      case $jsonSocket.POWER_OFF:
        return 'fa-square';
        break;
      case $jsonSocket.POWER_ON:
        return 'fa-check-square';
        break;
      default: // unknown
        return 'fa-minus-square';
    }
  };
});

// additional providers %4$s