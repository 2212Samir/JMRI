# LogixTableBundle_ca.properties
#
# Catalan properties for the jmri.jmrit.LogixTableAction GUI elements
# Translation Joan de Castro <joan276dca@yahoo.es> 20160818

LogixSystemName = Nom del Sistema de Logix 
LogixSystemNameHint = Entra Nom del Sistema per a Logix Nou, ex. IX13
LogixUserName = Nom d'usuari de Logix
LogixUserNameHint = Entra Nom d'Usuari per a Logix Nou, ex. Control de Senyal 2
LogixUserNameHint2 = Entra un nou Nom d'Usuari per a Logix, ex. Control de Senyal 2
AddLogixMessage1 = Sisuplau entra Nom d'Usuari i de Sistema, despr\u00e9s
AddLogixMessage2 = pitja crea Logix, despr\u00e9s afegeix Condicionals.
CopyLogixMessage1 = Sisuplau entra Nom d'Usuari i de Sistema\n
CopyLogixMessage2 = del Logix de dest\u00ed, despr\u00e9s pitja Copia
ConditionalSystemName = Nom de sistema de la condici\u00f3
ConditionalUserName = Nom d'Usuari de la Condici\u00f3
ConditionalUserNameHint = Entra el Nom d'Usuari per a la condici\u00f3, ex. 'Senyal 2 Vermell'
#OptionsMenu = Options
#ToolsMenu = Tools
SuppressWithDisable = Elimina recordatoris per Desar
EnableAll       = Habilita tots els Logix
DisableAll      = Inhabilita tots els Logix

ColumnLabelRow = Fila
ColumnLabelOperator = Oper
ColumnLabelNot = Neg
ColumnLabelDescription = Descripci\u00f3 d'estat de la Variable
ColumnLabelState = Estat
ColumnLabelTriggersCalculation = C\u00e0lcul de disparador

# Route Table and Signal Group Table
Toggle = Alterna

# Maintenance Dialog
ElementName = Nom de l'element
ElementNameHint = Entra el nom de Sistema o d'Usuari d'un element per trobar on est\u00e0 referenciat.
ReferenceButton = Obtenir les refer\u00e8ncies
FindOrphans = Troba elements orfes
EmptyConditionals = Troba condicionals buits
CrossReference = Troba refer\u00e8ncies creuades

TitleAddLogix = Afegeix Logix
TitleCopyLogix = Copia Logix
TitleEditLogix = Edita Logix
TitleEditConditional = Edita Condicional
TitleEditAction = Edita Acci\u00f3
TitleEditVariable = Edita Variable
TitleLogicalExpression = Expressi\u00f3 L\u00f2gica
TitleAntecedentPhrase = Variable Anterior
TitleConsequentPhrase = Acci\u00f3 Conseq\u00fcent 
TitleAction = Accions

TitlePickList = Llistes de Selecci\u00f3
OpenPickListTables = Obre Taules de Llistes de Selecci\u00f3
  
ConditionalTableTitle = Condicionals (en ordre de C\u00e0lcul)
NotApplicableAbbreviation = N/A
ActionTableTitle = cci\u00f3 Conseq\u00fcent (la part 'llavors') 
StateVariableTableTitle = Variable Anterior (la part 'si')
triggerOnChange = Executa Accions nom\u00e9s en canvi d'estat
triggerOnAny    = Executa Accions a cada disparador
OnTriggerToTrue = Quan disparador sigui Cert
OnTriggerToFalse= Quan disparador sigui Fals
OnTrigger       = En cada disparador
OnChangeToTrue  = En canvi A Cert
OnChangeToFalse = En Canvi A Fals
OnChange = En canvi
FromFile = des de fitxer,
After = , despr\u00e9s
Seconds = segons
to = a
onWarrant = amb autoritzaci\u00f3
onBlock = en Bloc
onPath  = en cam\u00ed
ValueInMemory = (Valor de Mem\u00f2ria)
ExecJythonCmd = Comanda Jython

True = Cert
False = Fals
Unknown = Desconegut
#LogicAND = AND
#LogicOR = OR
#LogicNOT = NOT
#LogicMixed = Mixed
#rowAbrev = R

LabelLogicType = Operador L\u00f2gic
TypeLogicHint = Escull l'operador l\u00f2gic per unir la variable d'estat amb la precedent (part 'si') d'aquest condicional
LabelAntecedent = Expressi\u00f3 Antecedent (la part 'si' del Condicional)
LabelAntecedentHint = Insereix par\u00e8ntesis perqu\u00e8 la sent\u00e8ncia compleixi la l\u00f2gica desitjada
#HelpButton = Ajuda
LogicHelpText1 = Barrejar And i Or pot causar avaluacions ambig\u00fces. L'expressi\u00f3\n
LogicHelpText2 = precedent s'avalua d'esquerra a dreta, com correspon en computaci\u00f3\n
LogicHelpText3 = de la variable m\u00e9s a l'esquerre fins a la variable m\u00e9s a la dreta.\n
LogicHelpText4 = Per modificar l'ordre d'avaluaci\u00f3, insereix par\u00e8ntesis per a indicar
LogicHelpText5 = la l\u00f2gica que vols. Potser has de modificar els operadors a usar. L'avaluaci\u00f3
LogicHelpText6 = l\u00f2gica d'un mode "Barrejat" \u00e9s el contingut del camp prcedent i no els\n
LogicHelpText7 = operadors mostrats a les files de la Taula d'Estat de Variable.

CreateLogixButton = Crea L\u00f2gica
LogixCreateButtonHint = Prem per a crear ana L\u00f2gica Nova
DoneButtonHint = Prem per desar qualsevol canvi en el Nom d'usuari i retorna a la Taula de L\u00f2gica
DeleteLogixButton = Elimina L\u00f2gica
DeleteLogixButtonHint = Prem per eliminar aquesta L\u00f2gica ai tots els seus condicionals
CancelLogixButtonHint = Prem per tornar a la Taula de L\u00f2gica sense canvis
NewConditionalButton = Condicional Nou
NewConditionalButtonHint = Prem per a crear in Condicional nou
CalculateButton = Calcula
CalculateButtonHint = Prem per calcular els Estats Condicionals sense acci\u00f3
ReorderButton = Reordenar
ReorderButtonHint = Prem la columna de la dreta en l'ordre desitjat
AddVariableButton =  Afegeix Variable d'Estat
AddVariableButtonHint = Prem per afegir una nova fila a la Taula de Variables d'Estat
CheckVariableButton = Revisa Variables d'Estat
CheckVariableButtonHint = Prem per evaluar l'estat actual de les Variables
UpdateConditionalButton = Update Conditional
UpdateConditionalButtonHint = Prem to keep changes and return to Edit Logix
CancelConditionalButtonHint = Prem to return to Edit Logix without any changes
DeleteConditionalButton = Elimina el Condicional
DeleteConditionalButtonHint = Prem per eliminar aquest condicional i retorna per Editar L\u00f2gica
addActionButton = Afegeix Acci\u00f3
addActionButtonHint = Prem per afegir una fila nova a la Taula d'Accions
UpdateButtonHint = Prem per desar els canvis i retornar a l'Edici\u00f3 de Condicionals
CancelButtonHint = Prem per tornar a l?edici\u00f3 de Condiconals sense canvis
DeleteButtonHint = Prem per eliminar i Editar Condicionals 

NameHintTurnout = Entra Nom (de sistema o usuari) per una Agulla (ex. LT12)
NameHintSensor = Entra Nom (de sistema o usuari) per un Sensor (ex. CS2)
NameHintSignal = Entra Nom (de sistema o usuari) per un Senyal (ex. IH34)
NameHintSignalMast = Entra Nom (de sistema o usuari) per un M\u00e0stil de Senyals i prem Enter p\u00e8r llegir els aspectes
NameHintLight = Entra Nom (de sistema o usuari) per Llum
NameHintRoute = Entra Nom (de sistema o usuari) d'un Itinerari
NameHintWarrant = Entra Nom (de sistema o usuari) d'una Advert\u00e8ncia
NameHintMemory = Entra Nom (de sistema o usuari) d'una Mem\u00f2ria
NameHintLogix = Entra Nom (de sistema o usuari) d'una L\u00f2gica
NameHintOBlock = Entra Nom (de sistema o usuari) d'un Bloc ocupat
CompareHintMemory = Selecciona un operador per a comparar valors de Mem\u00f2ria
CompareTypeHint = Selecciona un valor literal o el valor en una ubicaci\u00f3mem\u00f2ria
NameHintConditional = Entra el Nom de Sistema per Condicional (o Nom d'Usuari si \u00e9s una L\u00f2gica)
TurnoutSetHint = Selecciona Directe o Desviat depenent de com s'ha de posicionar una agulla
SensorSetHint = Selecciona Actiu o Inactiu depenent de com s'ha de configurar el Sensor
LightSetHint = Selecciona On o Off depenent de com s'ha de configurar el Llum
SignalSetHint = Selecciona L'Aspecte que ha de tenir el Senyal
SignalMastSetHint = Selecciona l'Aspecte que ha de tenir el  M\u00e0stil de Senyal i prem enter/retorna per llegir els Aspectes
OBlockStatusHint = Selecciona un Estat de Bloc Ocupar per fer un Test
LockSetHint = Selecciona Bloquejar o Desbloquejar
DataHintDelayedSensor = Entra temps (segons) per esperar abans de definir el Sensor
DataHintDelayedTurnout = Entra temps (segons) per esperar abans de moure l'Agulla
DataHintMemory = Entra Mem\u00f2ria en la que es compara el valor
DataHintValue = Entra Valor a comparar
DataHintSound = Entra nom d'un fitxer de so per a reproduir
DataHintScript = Entra nom d'un script a executar
SetHintSound = Prem per a seleccionar un fitxer de So
SetHintScript = Prem per a seleccionar un fitxer script
DataHintTime = Entra temps (hh:mm) per a rellotge de 24 hores
NameHintFromMemory = Entra Nom (de sistema o usuari) d'una mem\u00f2ria per copiar-lo
DataHintToMemory = Entra Nom (de sistema o usuari) d'una mem\u00f2ria per a rebre el valor copiat
DataHintLightIntensity = Entra el percentatge d'intesitat com un enter de 0 a 100.
DataHintLightTransitionTime = Entra n\u00famero del rellotge accelerat en minuts per fer una transici\u00f3entre 0% and 100%.
VariableTypeHint = Selecciona el tipus de Variable per la Condici\u00f3 a provar
VariableStateHint = Selecciona l'esta de la variable a provar
VariableAspectHint = Selecciona l'Aspecte del Senyal a provar
ActionItemHint = Selecciona un \u00cdtem d'Acci\u00f3 d'un Condiconal per executar
ActionOptionHint = Selecciona quan ha d'oc\u00f3rrer una acci\u00f3
SetHintAudio = Selecciona una acci\u00f3 per executar
NameHintAudio = Entra Nom (de sistema o usuari) per font d'\u00c0udio (ex. IAS2)
SetHintJythonCmd = Entra comanda de text Jython
DataHintTrainId = Entra un ID de tren des de la flota - o entra una adre\u00e7a DCC
DataHintTrainName = Entra un nom per el tren
DataHintBlockValue = Entra un valor per establir el Bloc
DataHintThrottleFactor = Entra un valor decimal per el factor d'ajust del ragulador.
BlockPathsSetHint = Selecciona el cam\u00ed a utilitzar
LabelTrainId = ID de tren o Adre\u00e7a
LabelTrainName = Nom del tren
LabelThrottleFactor = Factor d'ajust del Regulador
LabelBlockValue = Valor del Bloc

PromptLoadMastName = (Escriu el nom del M\u00e0stil de Senyals i prem enter)
PromptLoadSignalName = (Escriu el nom del Senyal i prem enter)

# Buttons used in multiple jmri.* packages, must stay here for older Logix .rb method
ButtonFirst = Primer
ButtonNext = Seg\u00fcent
ReorderMessage = Siusplau prem primer, despr\u00e9s Seg\u00fcent, Seg\u00fcent,... en l'ordre desitjat.
ButtonMove = Mou
ConfirmTitle = Pregunta
ConfirmLogixDelete = Est\u00e0s segur que vols eliminar la L\u00f2gica "{0}"?
ConfirmLogixDuplicate = La l\u00f2gica "{0}" ja existeix. Vols copiar\nel condicional de la L\u00f2gica"{1}" a "{0}"?
NameConditionalCopy = Reanomena la c\u00f2pia del Condicional "{0}" ({1})\na la L\u00f2gica {2} copaint-la a la L\u00f2gica "{3}" ({4}).\nPrem Cancel\u00b7la si no vols copiar aquest Condicional.
ConfirmIndirectReference = Prem "S\u00cd" si la ubicaci\u00f3 de mem\u00f2ria "{0}" contidr\u00e0 un \u00edtem v\u00e0lid per a aquesta acci\u00f3.\nPrem "NO" si vols posar el nom de l'\u00edtem directament.\nPrem "CANCEL\u00b7La" Si vols eliminar aquesta advert\u00e8ncia.\n

# Variable State combo box states
SensorActive = Actiu
SensorInactive = Inactiu
TurnoutClosed = Directe
TurnoutThrown = Desviat
TurnoutUnlock = Desbloquejat
TurnoutLock = Bloquejat
LightOn = On
LightOff = Off
StateMemoryEquals = Valor Sensible a Maj\u00fasculles
StateMemoryEqualsInsensitive = Valor NO Sensible a Maj\u00fascules 
StateMemoryCompare = Mem\u00f2ria Sensible a Maj\u00fascules
StateMemoryCompareInsensitive = Mem\u00f2ria NO sensible a maj\u00fascules
StateSignalHeadRed = Vermell
StateSignalHeadYellow = Groc
StateSignalHeadGreen = Green
StateSignalHeadDark = Senyal Apagat
StateSignalHeadFlashRed = Vermell Intermitent
StateSignalHeadFlashYellow = Groc Intermitent
StateSignalHeadFlashGreen = Verd Intermitent
StateSignalHeadLit = Senyal Apagat
StateSignalHeadHeld = Senyal Bloquejat
StateSignalHeadLunar = Blanc
StateSignalHeadFlashLunar = Blanc Intermitent
StateSignalMastLit = M\u00e0stil de Senyals Apagat
StateSignalMastHeld = M\u00e0stil de Senyals Bloquejat
StateRouteFree = Itinerari Lliure
stateRouteOccupied = Itinerari Ocupat
StateRouteReserved = Itinerari Assignat
StateRouteIsSet    = Itinerari Establert
StateTrainRunning  = Tren Circulant
#StateEntryExitActive = Active
#StateEntryExitInactive = Inactive

# Display Description of state variable 
TypeSensorActive = Sensor Actiu
TypeSensorInactive = Sensor Inactiu
TypeTurnoutThrown = Agulla Directa
TypeTurnoutClosed = Agulla Desviada
TypeConditionalTrue = Condicional Cert
TypeConditionalFalse = Condicional Fals
TypeLightOn = Llum Enc\u00e8s
TypeLightOff = Llum Apagat
TypeMemoryEquals = Comparaci\u00f3 de la Mem\u00f2ria amb un valor, Sensible a Maj\u00fascules
TypeMemoryEqualsInsensitive = Comparaci\u00f3 de la Mem\u00f2ria amb un valor, NO Sensible a Maj\u00fascules
TypeMemoryCompare = Comparaci\u00f3 de Mem\u00f2ria amb Mem\u00f2ria, Sensible a Maj\u00fascules
TypeMemoryCompareInsensitive = Comparaci\u00f3 de Mem\u00f2ria amb Mem\u00f2ria, NO Sensible a Maj\u00fascules)
TypeFastClockRange = Rang del Rellotge Accelerat
TypeSignalHeadRed = Senyal Vermell
TypeSignalHeadYellow = Senyal groc
TypeSignalHeadGreen = Senyal Verd
TypeSignalHeadDark = Senyal Apagat
TypeSignalHeadFlashRed = Senyal Vermell Intermitent
TypeSignalHeadFlashYellow = Senyal Groc Intermitent
TypeSignalHeadFlashGreen = Senyal Verd Intermitent
TypeSignalHeadLit = Senyal Enc\u00e8s
TypeSignalHeadHeld = Senyal Bloquejat
TypeSignalHeadLunar = Senyal Blanc
TypeSignalHeadFlashLunar = Senyal Blanc Intermitent
TypeWarrantRouteFree    = Lliure
TypeWarrantRouteOccupied = Ocupat
TypeWarrantRouteAllocated = Assignat
TypeRouteIsSet  = Establir
TypeTrainRunning = Corrent
TypeSignalMastAspectEquals = Aspecte del M\u00e0stil de Senyals igual
TypeSignalHeadAspectEquals = Aspecte de Senyal igual
TypeSignalMastLit = M\u00e0stil de Senyals Apagat
TypeSignalMastHeld = M\u00e0stil de Senyals Bloquejat
TypeEntryExitActive = Actiu
TypeEntryExitInactive = Inactiu

VariableOKMessage = Totes les variables d'Estat s\u00f3n correctes.
VariableErrorMessage = Error, sisuplau corregeix i torna a provar.
ActionOKMessage = Totes les accions son Correctes.
NoActionMessage = Una Condici\u00f3 requereix una Variable d'Estat i normalment t\u00e9 una acci\u00f3.

FileButtonHint = Prem per a seleccionar un fitxer del disc
LabelActionItem = grup d'accions
LabelActionType = Tipus d'Acci\u00f3
LabelVariableType = Tipus de Variable
LabelVariableState = Estat de la Variable
LabelVariableAspect = Aspecte Variable
LabelLiteralValue  = Valor Literal
LabelMemoryValue  = Memory Value
LabelStartTime  = Temps d'Inici
LabelEndTime    = Temps de Finalitzaci\u00f3
LabelCompareOp  = Operador d'Operaci\u00f3
LabelCompareType  = Compara com
LabelActionOption = Canvia Opci\u00f3
LabelItemName   = Nom de Sistema / Usuari
LabelActionTurnout = Posici\u00f3 de l'Agulla
LabelActionSensor = Estat del Sensor
LabelActionLight = Estat del llum
LabelActionSignal = Aparen\u00e7a del Senyal
LabelSignalAspect = Aspecte del M\u00e0stil de Senyals
LabelActionLock = Estat de Blocatge
LabelActionFile = Estableix
LabelActionText = Dades de l'Acci\u00f3
LabelActionDescription = Descipci\u00f3 de l'Acci\u00f3
LabelActionAudio = Acci\u00f3 d'\u00c0udio
LabelDelayTime  = temps de Retard
LabelSetTime    = Estableix temps
LabelSetFile    = Nom del Fitxer
LabelScriptCommand  = Comanda d'Script
LabelLightIntensity = Intensitat de Llum
LabelTransitionTime = Temps de transici\u00f3
LabelMemoryLocation = Nom de Mem\u00f2ria
LabelValue      = Valor
LabelBlockPaths = Cam\u00ed del Bloc
LabelBlockStatus = Estat del Bloc
LabelControlTrain = Comanda de Control

ActionNone = Cap
ActionSetTurnout = Estableix Agulla
ActionSetSignal = Estableix aparen\u00e7a de Senyal
ActionSetSignalHeld = Estableix Senyal Bloquejat
ActionClearSignalHeld = Neteja Bloqueig del Senyal
ActionSetSignalDark = Estableix Senyal Apagat
ActionSetSignalLit = Estableix Senyal Enc\u00e8s
ActionTriggerRoute = Dispara Itinerari
ActionSetSensor = Estableix Sensor
ActionDelayedSensor = Estableix Sensor temportizat
ActionResetDelayedSensor = Reseteja l'establiment del Sensor temporitzat
ActionCancelSensorTimers = Cancel\u00b7la Temporitzadors del Sensor
ActionDelayedTurnout = Agulla Temporitzada
ActionResetDelayedTurnout = Reseteja Agulla Temportizada
ActionCancelTurnoutTimers = Cancel\u00b7la Temporitzadors d'Agulla
ActionSetLight = Estableix Llum
ActionSetLightIntensity = Estableix la Intensitat de Llum
ActionSetLightTransitionTime = Estableix Temps de Transici\u00f3 de Llum
ActionSetMemory = Estableix Mem\u00f2ria
ActionCopyMemory = Copia Mem\u00f2ria a Mam\u00f2ria 
ActionEnableLogix = Habilita L\u00f2gica
ActionDisableLogix = Inhabilita L\u00f2gica
ActionPlaySound = Reprodueix Fitxer de So
ActionRunScript = Executa Script
ActionTurnoutLock = Bloqueja Agulla
ActionSetFastClockTime = Estableix Hora del Rellotge Accelerat
ActionStartFastClock = Inicia el Rellotge Accelerat
ActionStopFastClock = Para el Rellotge Accelerat
ActionAllocateWarrant = Permetre Ordres en l'Itinerari
ActionDeallocateWarrant = Anul\u00b7la Ordres
ActionSetWarrantTurnouts = Estableix Ag\u00fclles de l'Itinerari
ActionAutoRunWarrant    = Auto Run Train
ActionManualRunWarrant  = Manually Run Train
ActionControlTrain      = Control Auto Train
ActionSetTrainId        = Set Train ID
ActionSetTrainName      = Set Train Name
ActionSetSignalMastAspect = Set M\u00e0stil de Senyals Aspect
ActionSetThrottleFactor = Set Throttle Factor
ActionSetSignalMastHeld = Set M\u00e0stil de Senyals Held
ActionClearSignalMastHeld = Clear M\u00e0stil de Senyals Held
ActionSetSignalMastDark = Set M\u00e0stil de Senyals Dark
ActionClearSignalMastDark = Clear M\u00e0stil de Senyals Dark
ActionSetBlockValue     = Set Block Value
ActionSetBlockError     = Set Block Error
ActionClearBlockError   = Clear Block Error
ActionDeallocateBlock   = Deallocate Block
ActionSetBlockOutOfService = Set Block OutOfService
ActionBlockInService    = Clear Block OutOfService

ActionTypeHint = Selecciona type of acci\u00f3, or select None if no acci\u00f3 is needed.

ActionControlAudio = Control Audio object
ActionJythonCommand = Execute Jython Command

AudioSourcePlay = Play
AudioSourceStop = Stop
AudioSourcePlayToggle = Toggle Play
AudioSourcePause = Pause
AudioSourceResume = Resume
AudioSourcePauseToggle = Toggle Pause
AudioSourceRewind = Rewind
AudioSourceFadeIn = Fade-in
AudioSourceFadeOut = Fade-out
AudioResetPosition = Reset Position

WarrantHalt     = Halt
WarrantResume   = Resume
WarrantAbort    = Abort

# Bean names used in multiple jmri.* packages, must stay here for older Logix .rbx method
# in LogixTableAction these names are fetched from jmri.NamedBeanBundle.props
Sensor  = Sensor
Turnout = Turnout
Conditional = Conditional
Light   = Light
Memory  = Memory
SignalHead = Senyal
SignalMast = M\u00e0stil de Senyals
Signal  = Signal
Warrant = Warrant
WarrantRoute = Warrant Route
OBlock  = OBlock
OBlockStatus = OBlock Status
Route   = Route
Logix   = Logix
FastClock = Fast Clock
Audio   = Audio
Script  = Script
Other   = Other
EntryExit = Entry Exit

VarStateDescrpt = {0} "{1}" state is {2}
SignalHeadStateDescrpt = {0} "{1}" Appearance is {2}
SignalMastStateDescrpt = {0} "{1}" Aspect is {2}
MemoryValueDescrpt = {0} "{1}" {2} value "{3}"
MemoryCompareDescrpt = {0} "{1}" {2} {0} "{3}"
FastClockDescrpt = {0} range from {1} to {2}
CopyOf = Copy of {0}

LessThan        = Less Than
LessOrEqual     = Less Than Or Equal
Equal           = Equal
GreaterOrEqual  = Greater Than Or Equal
GreaterThan     = Greater Than

#ErrorTitle = Error
Error1 = A Logix with this system name already exists.\nPlease change system name and try again.
Error3 = A Logix with this user name already exists.\nPlease change user name and try again.
Error5 = Cannot find a Logix with that system name.
Error6 = New user name is already in use. Cannot update this Logix.\nPlease change user name and try again.
Error4 = The following error occurred when activating this Logix.\n
Error7 = \nPlease correct the reference or delete the offending Conditional or Logix.
Error8 = Invalid system name, or system name not entered.\nPlease enter a valid Logix system name (ex.. IX3) and try again.
Error9  = Enter a decimal number or a Memory variable containing\na decimal number for the number of segons to {0}.
Error10 = New user name is already in use. Cannot update this Conditional.\nPlease change user name and try again.
Error11 = Conditional "{0}" ({1}) is a Conditional Variable in the Conditional,\n"{2}" ({3}), of Logix, "{4}" ({5}).\nPlease remove that variable first.
Error20 = The name "{0}" does not match an existing conditional.\nPlease enter a valid conditional system name, or the user name of a conditional in this logix.
Error21 = "{1}" is not a valid appearance for Senyal "{0}".
Error22 = The name "{0}" does not match an existing "{1}".\nPlease correct or crear as required, and try again.
Error23 = Set Delayed Sensor acci\u00f3
Error24 = Memory variable "{0}" currently does not contain a numeric value.\nWhen triggered the acci\u00f3 cannot be performed until this value is corrected! 
Error26 = Invalid time entry "{0}"\nTime must be entered in hh:mm format (ex.. 01:30, 16:00)\nfor a 24-hour clock. Please reenter in correct format, and try again. 
Error27 = Reset Delayed Set Sensor acci\u00f3
Error29 = Set Light Transition Time
Error30 = Duplicate user name error. Entered user name is already in use by Conditional "{0}".\nPlease enter a different user name from others in this table.
Error31 = Copy of Logix "{0}" in progress.  Please complete and try again.
Error32 = Cannot edit two Logixs at the same time. Please complete edit of Logix "{0}" and try again.
Error34 = Cannot edit two Conditionals at the same time. Please complete edit of Conditional "{0}" and try again.
Error35 = Edit Conditional in progress. Please complete edit of Conditional "{0}" and try again.
Error38 = {0} is an unreasonable amount to {1}\nPlease enter a positive percentage, and try again.
Error39 = Set Delayed Turnout acci\u00f3
Error40 = Light - {0} - does not support transition time.\nPlease enter a light with Transition Time or change acci\u00f3 type, and try again.
Error41 = Reset Delayed Set Turnout acci\u00f3
Error42 = Set Light Intensity acci\u00f3
Error43 = Enter an integer (digits only) or a Memory variable containing\nan integer to Set Light Intensity.
Error45 = Light - {0} - does not have variable intensity.\nPlease enter a light with variable intensity or change acci\u00f3 type, and try again.
Error46 = At least two Actions are needed to reorder Actions.
Error47 = Edit of State Variable in progress. Please complete and try again.
Error48 = Edit of Action in progress. Please complete edit and try again.
Error49 = LRoute Initializer antecedent cannot be edited (The acci\u00f3s may be edited)
ErrorAppearance = Selecciona an Appearance. You must hit the Enter/Return key\nafter entering a name with the cursor in the name field.
ErrorAspect = Selecciona an Aspect.  You may need to hit the Enter/Return key\nwith the cursor in the name field.
ErrorVariableType = Selecciona a Variable Type or Cancel.
ErrorVariableState = Selecciona a state for this variable.

ParseError1 = Could not find expected Left argument < {0} >
ParseError2 = Could not find expected operator. < {0} >
ParseError3 = Could not find expected Right argument. < {0} >
ParseError4 = Antecedent parsing error: Unexpected character found: < {0} >
ParseError5 = Antecedent parsing error: All {0} rows must be used. Row {1} is missing.
ParseError6 = Exception thrown while parsing antecedent\n
ParseError7 = Unmatched parenthesis, missing < {0} >.
ParseError8 = \nIf the above message is 'String index out of range:', the following number is the position in the antecedent where the error occurred.
ParseError9 = Unexpected operator or characters < {0} >

#WarnTitle = Warning
ButtonDisabled = Continue Disabled
ButtonEnabled = Continue Enabled
Warn1 = The last Conditional has been deleted from this Logix.
Warn2 = A Logix must have at least one Conditional to do anything useful.
Warn3 = The last State Variable has been deleted from this Conditional.\nA Conditional must have at least one State Variable to do anything useful.
Warn5 = The Conditional {0} ({1}) has no State Variables.\nA Conditional must have at least one State Variable to do anything useful.
Warn6 = A Memory acci\u00f3 cannot be referred to indirectly through a memory location.
# Warn7 is inserted as {2} in Warn6 when the item being warned about
# is a Senyal, or otherwise has a specific value as part of the trigger.
Warn7 = to or from {0}
Warn8 = Conditionals in Logix "{0}" ({1}) cannot be edited.\nGo to the Sensor Group Table to edit sensor groups.
Warn9 = Conditions exist that could result in a logic loop. \n The following both trigger this Logix and are changed by it:\n
Warn10 = was disabled as requested.\nPlease remember to enable it later.
Warn11 = \nYou may delete Conditional "{0}" ({1})\nor edit it from the template window where it was creard.
makeSelection = Please select an acci\u00f3 type.
DeleteLogix = When deleting the Logix