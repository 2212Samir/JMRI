@startuml
participant Layout
participant CodeButton
participant Column
participant CodeLine
participant TurnoutSection
participant Locking

Layout o-> CodeButton: Button Pressed\nSensor ACTIVE
activate CodeButton
CodeButton ->o Layout : Code Indicator\nON

CodeButton -> Column : requestSendCode()
activate Column
Column -> TurnoutSection : codeSendStart()
activate TurnoutSection
TurnoutSection ->o Layout : TO Indicators\nOFF
deactivate TurnoutSection

note over Column: Combine codeSendStart()\nand codeSendOK()?
Column -> TurnoutSection : codeSendOK()
activate TurnoutSection
deactivate TurnoutSection

Column -> CodeLine : requestSendCode()
activate CodeLine

CodeLine ->o Layout : Code sequence\nSTART
deactivate CodeLine
deactivate Column
deactivate CodeButton

...

Layout o-> CodeLine: Code sequence\nCOMPLETE
activate CodeLine
CodeLine -> Column : sendComplete()
activate Column
CodeLine -> CodeButton : sendComplete()
activate CodeButton
CodeButton ->o Layout : Code Indicator\nOFF
deactivate CodeButton
deactivate CodeLine
deactivate Column

note over Column: Wait for remote\noperation to complete.\nMaybe in CodeLine?

Layout -> Column : timeout
activate Column
Column -> CodeLine : indicationStart()
activate CodeLine
CodeLine -> CodeButton : indicationStart()
activate CodeButton
CodeButton ->o Layout : Code Indicator\nON
deactivate CodeButton
CodeLine ->o Layout : Indication sequence\nSTART
deactivate CodeLine
deactivate Column

...

Layout o-> CodeLine: Indication sequence\nCOMPLETE
activate CodeLine
CodeLine -> CodeButton : indicationComplete()
activate CodeButton
CodeButton ->o Layout : Code Indicator\nOFF
deactivate CodeButton
CodeLine -> Column : indicationComplete()

Column -> TurnoutSection : indicationComplete()
activate TurnoutSection
TurnoutSection ->o Layout : TO Indicators\nSET
deactivate TurnoutSection

deactivate CodeLine


@enduml

