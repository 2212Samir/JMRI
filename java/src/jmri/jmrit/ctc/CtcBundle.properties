# ctc.Bundle.properties

# Integration properties
CtcRunAction = Start CTC Runtime
CtcEditorAction = Open CTC Editor
CtcRunActionButton = Run CTC
CtcEditorActionButton = CTC Editor...
TitleCtcEditor = Demo CTC Editor

# FrmMainForm
MenuFile = File
MenuNew = New
MenuOpen = Open...
MenuSave = Save
MenuSaveAs = Save as...
MenuExit = Exit without saving
MenuEdit = Edit
MenuFind = Find and Replace...
MenuFix = Fix Error(s)...
MenuConfigure = Configure
MenuDebugging = Debugging
MenuDefaults = Defaults
MenuFleeting = Fleeting
MenuPatterns = Patterns
MenuDesign = GUI Design
MenuAbout = About
TitleMainForm = CTCEditor
LabelDefined = Presently defined CTC O.S. sections:
ButtonAdd = Add
ButtonDelete = Delete
ButtonReapplyItem = Reapply patterns to selected item
ButtonChange = Change Switch and Signal Etc. #'s
ButtonMoveUp = Move Up
ButtonMoveDown = Move Down
ButtonCheck = <html><center>Check<br>everything<br>with<br>JMRI</center></html>
ButtonXmlFiles = Write .xml files for JMRI GUI support
LabelCode = Code button:
LabelSignalIndicators = Signal direction indicators:
LabelSignalLever = Signal direction lever:
LabelSwitchIndicators = Switch direction indicators:
LabelSwitchLever = Switch direction lever:
LabelCallOn = Call On:
LabelTrafficLock = Traffic locking:
LabelTurnoutLock = Turnout locking:
LabelIndicatorLock = Indication locking:
InfoEnabled = Always enabled!
LabelEnabled = Enabled
ButtonEdit = Edit

# Dialog Shared
InfoRequired = +Required
InfoOptional = +Optional
InfoBlank = +Selecting self forces blank!
ButtonSaveClose = +Save and close
ButtonReapply = +Reapply patterns - this form ONLY!
ButtonAddNew = +Add New
ButtonEditBelow = +Edit Below
ButtonDelete = +Delete
ButtonCancel = +Cancel

# DlgAddModifyCTCColumn
TitleDlgAddModAdd = Add new switch and signal etc. #'s
TitleDlgAddModChg = Modify switch and signal etc. #'s
LabelDlgAddModSwitch = Switch #:
LabelDlgAddModColumn = GUI column #:
LabelDlgAddModGen = GUI Generated before
InfoDlgAddModSignal = The Signal # will always be one more than the switch #
InfoDlgAddModGen = 0 = nothing generated
InfoDlgAddModNote = <html>NOTE: This ONLY modifies the entry in the list 'Presently defined CTC Columns'.  If you want the new numbers to be applied to all of the other data, then press 'Reapply patterns to  selected item' on the main screen, or go into the individual areas and SELECTIVELY modify them there.</html>

# DlgCB
TitleDlgCB = Edit Code Button
LabelDlgCBSensor = Code button sensor:
LabelDlgCBPriSensor = Primary O.S. section occupied sensor:
LabelDlgCBSecSensor = Secondary O.S. section occupied sensor:
LabelDlgCBSwitch = Switch slaved to O.S. section #:
LabelDlgCBDelay = No code button delay in milliseconds:
InfoDlgCBLockAll = Locks everything
InfoDlgCBLockTO = Prevents turnout change, turnout lock
InfoDlgCBNormal = Leave this blank if this is a normal O.S. section
InfoDlgCBZero = Enter 0 for normal code button
InfoDlgCBDelay = Enter >0 for tower O.S. section delay (no code button)

# DlgCO
TitleDlgCO = Edit call on
LabelDlgCOGroupingList = Grouping list:
LabelDlgCOToggleSensor = Toggle sensor:
LabelDlgCOSignalTYpe = Signal type:
LabelDlgCOSignalHead = Signal Head
LabelDlgCOSignalMast = Signal Mast

InfoDlgCORow1 = Based upon Signal Type selected, various values are needed below and enabled for editing:
InfoDlgCORow2A = Signal:
InfoDlgCORow2B = A standard JMRI signal head or signal mast which will get the call on aspect.
InfoDlgCORow3A = Signal facing direction:
InfoDlgCORow3B = LEFTTRAFFIC or RIGHTTRAFFIC
InfoDlgCORow4A = Signal aspect to display:
InfoDlgCORow4B = For Signal Heads: Dark, Red, Yellow (Semaphores), Green, Flashing Red (Signals), Flashing Yellow, Flashing Green, Lunar, Flashing Lunar
InfoDlgCORow5A = Called on sensor:
InfoDlgCORow5B = For Signal Heads: required JMRI Sensor for occupancy in the direction indicated (i.e. the sensor where the train is ultimately GOING) which MUST be occupied.
InfoDlgCORow6A = Block:
InfoDlgCORow6B = For Signal Masts: the "Permissive" aspect needs to be set in the specified block, and additionally the occupancy sensor associated with it MUST be occupied.

LabelDlgCOSignal = Signal:
LabelDlgCOSensor = Called on sensor:
LabelDlgCOBLock = Block:

InfoDlgCOSep = --------------------------------------- ROUTE ---------------------------------------
InfoDlgCOSelect = Select up to 6 (all optional) switch direction indicators (when lit) to specify the route exactly:




