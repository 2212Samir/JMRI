<FindBugsFilter>
     <Match>
       <!-- Cleanup of class, method names left for later-->
       <Bug code="Nm" />
     </Match>

     <Match>
       <!-- Design issue, for later -->
       <Bug pattern="SIC_INNER_SHOULD_BE_STATIC_ANON" />
     </Match>

     <Match>
       <!-- Most of these are non-I18N, internal changes of case.
            We should find the I18N ones, but it seems excessive
            to track down and annotate all the others first thing -->
       <Bug pattern="DM_CONVERT_CASE" />
     </Match>

     <Match>
       <!-- Efficiency issue, bu hard to ensure refactor doesn't introduce
            bugs, so leaving for later -->
       <Bug pattern="WMI_WRONG_MAP_ITERATOR" />
     </Match>

     <Match>
       <!-- Design issue, for later -->
       <Bug pattern="SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS" />
     </Match>

     <Match>
       <!-- Design issue, for later -->
       <Bug pattern="PZLA_PREFER_ZERO_LENGTH_ARRAYS" />
     </Match>

     <Match>
       <!-- Minor clean-up issue, for later -->
       <Bug pattern="RI_REDUNDANT_INTERFACES" />
     </Match>

     <Match>
       <!-- JMRI code is often written to trust wierd from other classes,
            so the question of "malicious" is complicated. These should 
            eventually be restored one-by-one   -->
       <Bug category="MALICIOUS_CODE" />
     </Match>

     <Match>
       <!-- JMRI does not use serialization, permanently ignore -->
       <Bug code="Se,SnVI" />
     </Match>

</FindBugsFilter>
